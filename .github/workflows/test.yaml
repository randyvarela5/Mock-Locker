name: iOS Unit Tests
on:
  # Run on every push and pull request
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  
  # Run on a schedule - every day at 9 AM UTC
  schedule:
    - cron: '0 9 * * *'  # Fixed: was '0 9 * **'
    # - cron: '0 */6 * * *'  # Every 6 hours
    # - cron: '0 9 * * 1'    # Every Monday at 9 AM
  
  # Allow manual triggering
  workflow_dispatch:
jobs:
  test:
    name: Run Unit Tests
    runs-on: macos-latest  # Required for iOS builds
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2'  # Use latest stable version

    - name: Debug project file
      run: |
        echo "=== Project structure ==="
        ls -la "Mock Locker.xcodeproj/"
        echo "=== First 20 lines of project.pbxproj ==="
        head -20 "Mock Locker.xcodeproj/project.pbxproj"
        echo "=== Check for merge conflicts ==="
        grep -n "<<<<<<\|======\|>>>>>>" "Mock Locker.xcodeproj/project.pbxproj" || echo "No merge conflicts found"
        echo "=== File type check ==="
        file "Mock Locker.xcodeproj/project.pbxproj"
        
    - name: Build and Test
      run: |
        xcodebuild test \
          -project "Mock Locker.xcodeproj" \
          -scheme "Mock Locker" \
          -destination 'platform=iOS Simulator,name=iPhone 16' \
          -enableCodeCoverage YES \
          -resultBundlePath TestResults.xcresult
          
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()  # Upload even if tests fail
      with:
        name: test-results
        path: TestResults.xcresult
          
    # Optional: Generate and display coverage report
    - name: Generate Coverage Report
      if: success()
      run: |
        xcrun xccov view --report --only-targets TestResults.xcresult > coverage.txt
        cat coverage.txt
        
    - name: Upload Coverage
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: coverage-report
        path: coverage.txt
